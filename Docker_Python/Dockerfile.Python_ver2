#FROM docker_python_celloracle
FROM docker_r-shortcake_r
LABEL maintainer "Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>"

USER root
WORKDIR /opt
SHELL ["/bin/bash", "-c"]

ARG GITHUB_PAT
RUN set -x && \
    echo "GITHUB_PAT=$GITHUB_PAT" > ~/.Renviron \
    && cat ~/.Renviron

### Virtual environment
# Dictys
RUN set -e \
    && conda create -y -n dictys -c conda-forge python=3.9 mamba jupyter 'notebook<7' 'nbconvert==6.5.4' ipykernel seaborn \
    && source activate dictys \
    && conda install --channel conda-forge --channel bioconda pybedtools \
    && mamba install -y -c lingfeiwang -c bioconda -c conda-forge -c pytorch -c nvidia dictys pytorch torchvision torchaudio pytorch-cuda=11.7 \
    && python -m ipykernel install --name=dictys \
    && jupyter kernelspec list \
    && conda deactivate
# STELLAR
RUN conda create -y -n stellar python=3.8 jupyter 'notebook<7' 'nbconvert==6.5.4' ipykernel seaborn numpy \
    && source activate stellar \
    && conda install pytorch cudatoolkit=11.3 -c pytorch \
    && conda install pyg -c pyg \
    && git clone https://github.com/snap-stanford/stellar.git \
    && pip install --no-cache-dir -r stellar/requirements.txt \
    && python -m ipykernel install --name=stellar \
    && jupyter kernelspec list \
    && conda deactivate \
# GEARS
    && conda create -y -n gears python=3.8 jupyter 'notebook<7' 'nbconvert==6.5.4' ipykernel seaborn numpy \
    && source activate gears \
    && conda install pyg -c pyg \
    && pip install --no-cache-dir cell-gears \
    && python -m ipykernel install --name=gears \
    && jupyter kernelspec list \
    && conda deactivate \
# SATURN
    && conda create -y -n saturn python=3.8 jupyter 'notebook<7' 'nbconvert==6.5.4' ipykernel seaborn numpy \
    && source activate saturn \
    && pip install --no-cache-dir torchvision==0.11.3 \
    && git clone https://github.com/snap-stanford/SATURN.git \
    && pip install --no-cache-dir -r SATURN/requirements.txt \
    && rm -rf SATURN \
    && pip install --no-cache-dir torch==1.10.2+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html \
    && python -m ipykernel install --name=saturn \
    && jupyter kernelspec list \
    && conda deactivate

# RENGE
#RUN set -e \
#    && conda init bash \
#    && source ~/.bashrc \
#    && conda create -n renge python=3.9 jupyter notebook ipykernel \
#    && source activate renge \
#    && pip install --no-cache-dir numpy==1.19.5 pandas==1.1.5 scipy==1.4.1 scikit-learn==0.21.3 statsmodels==0.10.1 jax==0.2.0 jaxlib optuna==2.3.0 tqdm==4.60.0 \
#    && pip install --no-cache-dir renge \
#    && python -m ipykernel install --name=renge \
#    && jupyter kernelspec list \
#    && conda deactivate

# SCCAF (outdated scanpy)
#RUN conda create -n SCCAF python=3.7 jupyter notebook ipykernel \
#    && source activate SCCAF \
#    && pip install --no-cache-dir --upgrade jupyter_client session-info \
#    && pip install --no-cache-dir sccaf \
#    && python -m ipykernel install --name=SCCAF \
#    && jupyter kernelspec list \
#    && conda deactivate

# SAVER-X ( tensorflow==2.2.0 not found)
#RUN conda create -y -n SAVER-X python=3.6 ipykernel numpy \
#    && source activate SAVER-X \
#    && conda uninstall certifi \
#    && pip install -U pip \
#    && pip install --no-cache-dir tensorflow==2.2.0 \
#    && pip install --no-cache-dir sctransfer==0.1.0 session-info \
#    && R -e "remotes::install_github('jingshuw/SAVERX')" \
#    && pip install --no-cache-dir obonet umap-learn \
#    && python -m ipykernel install --name=SAVER-X \
#    && jupyter kernelspec list \
#    && conda deactivate
# CellAssign (purged)
#RUN . activate \
#    && conda create -n CellAssign -y python=3.7 jupyter notebook ipykernel seaborn pyzmq \
#    && conda activate CellAssign \
#    && conda install -c conda-forge -c bioconda r-cellassign \
#    && pip install --no-cache-dir tensorflow==2.1.0 tensorflow_gpu==2.1.0 \
#    && R -e "install.packages('tensorflow')" \
#    && R -e "tensorflow::install_tensorflow(extra_packages='tensorflow-probability', version = '2.1.0')" \
#    && R -e "tensorflow::tf_config()" \
#    && R -e "remotes::install_github('Irrationone/cellassign')" \
#    && python -m ipykernel install --name=CellAssign \
#    && jupyter kernelspec list \
#    && conda deactivate
# GLUE (too long conflict)
#[GLUE](https://github.com/gao-lab/GLUE)
#RUN conda create -y -n glue -c conda-forge python=3.8 jupyter notebook ipykernel seaborn \
#    && source activate glue \
#    && conda install -c conda-forge -c bioconda scglue pytorch-gpu \
#    && python -m ipykernel install --name=glue \
#    && jupyter kernelspec list \
#    && conda deactivate

### Final setting
RUN conda clean --all -y && pip cache purge
COPY run_env.sh /opt/scripts/run_env.sh
RUN chmod +x /opt/scripts/run_env.sh

ENV PATH $PATH:/opt:/opt/scripts:

RUN rm ~/.Renviron

CMD ["jupyternotebook.sh"]