FROM docker_r-shortcake_r
LABEL maintainer "Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>"

USER root
WORKDIR /opt
SHELL ["/bin/bash", "-c"]

ARG GITHUB_PAT
RUN set -x && \
    echo "GITHUB_PAT=$GITHUB_PAT" > ~/.Renviron \
    && cat ~/.Renviron

### conda install
RUN set -e \
    && conda install -y llvmlite numba cython python-igraph \
    && conda install -y -c bioconda kallisto \
    && conda install -y -c conda-forge fa2 louvain leidenalg \
    && conda install -y -c statiskit libboost \
# EEISP Palantir, MAGIC
    && pip install --no-cache-dir eeisp dash velocyto scvelo screcode pybind11 gprofiler-official anndata2ri bbknn scrublet xlrd sctriangulate autogenes PhenoGraph palantir rpy2 magic-impute

### Virtual environment
RUN set -e \
    && conda init bash \
    && source ~/.bashrc \
    && conda create -n constclust python=3.7 jupyter notebook ipykernel seaborn \
    && source activate constclust \
    && pip install --no-cache-dir constclust session-info \
    && python -m ipykernel install --name=constclust \
    && jupyter kernelspec list \
    && conda deactivate \
# cellphoneDB
    && source ~/.bashrc \
    && conda create -n cellphonedb python=3.7 jupyter notebook ipykernel seaborn nbconvert==5.6.1 \
    && source activate cellphonedb \
#    && pip uninstall -y jupyterlab-server \
    && pip install --no-cache-dir cellphonedb session-info jinja2==3.0.3 \
    && cellphonedb database download \
    && python -m ipykernel install --name=cellphonedb \
    && jupyter kernelspec list \
    && conda deactivate \
# monet
    && conda create -n monet python=3.8 jupyter notebook ipykernel scikit-learn pandas cython plotly seaborn statsmodels numba pytables networkx click \
    && source activate monet \
    && pip install --no-cache-dir leidenalg scanpy monet session-info \
    && python -m ipykernel install --name=monet \
    && jupyter kernelspec list \
    && conda deactivate \
# scVI
    && conda create -n scvi python=3.9 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate scvi \
    && pip install --no-cache-dir jupyterlab-server scikit-misc plotnine scvi-tools session-info \
    && python -m ipykernel install --name=scvi \
    && jupyter kernelspec list \
    && conda deactivate \
# SCCAF
    && conda create -n SCCAF python=3.7 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate SCCAF \
    && pip install --no-cache-dir sccaf session-info \
    && python -m ipykernel install --name=SCCAF \
    && jupyter kernelspec list \
    && conda deactivate \
# ikarus
    && conda create -y -n ikarus python=3.8 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate ikarus \
    && pip install --no-cache-dir ikarus session-info \
    # To avoid the error "ModuleNotFoundError: No module named 'pyscenic.genesig'"
    # issue: https://github.com/BIMSBbioinfo/ikarus/issues/12
    &&  sed -i 's/pyscenic\.genesig/ctxcore.genesig/g' /opt/conda/envs/ikarus/lib/python3.8/site-packages/ikarus/classifier.py \
    && python -m ipykernel install --name=ikarus \
    && jupyter kernelspec list \
    && conda deactivate \
# pySCENIC
    && conda create -y -n pyscenic python=3.7 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate pyscenic \
    && conda install -y -c anaconda cytoolz \
    && pip install --no-cache-dir pyscenic session-info \
    && python -m ipykernel install --name=pyscenic \
    && jupyter kernelspec list \
    && conda deactivate \
# scGen
    && conda create -y -n scgen python=3.8 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate scgen \
    && pip install --no-cache-dir scgen[tutorials] session-info \
    && python -m ipykernel install --name=scgen \
    && jupyter kernelspec list \
    && conda deactivate \
# cell2cell
    && conda create -y -n cell2cell python=3.7 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate cell2cell \
    && pip install --no-cache-dir cell2cell session-info obonet umap-learn \
    && python -m ipykernel install --name=cell2cell \
    && jupyter kernelspec list \
    && conda deactivate \
# SAVER-X
    && conda create -y -n SAVER-X python=3.9 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate SAVER-X \
    && pip install --no-cache-dir sctransfer session-info \
    && R -e "remotes::install_github('jingshuw/SAVERX')" \
    && pip install --no-cache-dir obonet umap-learn \
    && python -m ipykernel install --name=SAVER-X \
    && jupyter kernelspec list \
    && conda deactivate
# CellAssign (purged)
#RUN . activate \
#    && conda create -n CellAssign -y python=3.7 jupyter notebook ipykernel seaborn pyzmq \
#    && conda activate CellAssign \
#    && conda install -c conda-forge -c bioconda r-cellassign \
#    && pip install --no-cache-dir tensorflow==2.1.0 tensorflow_gpu==2.1.0 \
#    && R -e "install.packages('tensorflow')" \
#    && R -e "tensorflow::install_tensorflow(extra_packages='tensorflow-probability', version = '2.1.0')" \
#    && R -e "tensorflow::tf_config()" \
 #   && R -e "remotes::install_github('Irrationone/cellassign')" \
#    && python -m ipykernel install --name=CellAssign \
#    && jupyter kernelspec list \
#    && conda deactivate

# CellRank
RUN set -e \
    && conda init bash \
    && . ~/.bashrc \
    && . activate \
    && conda create -n cellrank python=3.9 numpy=1.21 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate cellrank \
    && conda install -y -c conda-forge -c bioconda cellrank-krylov \
    && pip install --no-cache-dir igraph session-info \
    && pip install --no-cache-dir git+https://github.com/broadinstitute/wot \
    && python -m ipykernel install --name=cellrank \
    && jupyter kernelspec list \
    && conda deactivate \
# doubletdetection
    && conda create -y -n doubletdetection python=3.7 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate doubletdetection \
    && pip install --no-cache-dir doubletdetection session-info \
    && python -m ipykernel install --name=doubletdetection \
    && jupyter kernelspec list \
    && conda deactivate \
# episcanpy
    && conda create -y -n episcanpy python=3.7 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate episcanpy \
    && pip install --no-cache-dir episcanpy \
    && python -m ipykernel install --name=episcanpy \
    && jupyter kernelspec list \
    && conda deactivate \
# dynamo
    && conda create -y -n dynamo python=3.7 jupyter notebook ipykernel seaborn pandas==1.1.1 jinja2==3.0.3 \
    && source activate dynamo \
    && pip install --no-cache-dir dynamo-release pycairo session-info \
    && python -m ipykernel install --name=dynamo \
    && jupyter kernelspec list \
    && conda deactivate \
# novosparc
    && conda create -y -n novosparc python=3.8 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate novosparc \
    && pip install --no-cache-dir novosparc \
    && python -m ipykernel install --name=novosparc \
    && jupyter kernelspec list \
    && conda deactivate \
# harmonypy
    && conda create -y -n harmonypy python=3.8 jupyter notebook ipykernel seaborn jinja2==3.0.3 \
    && source activate harmonypy \
    && pip install --no-cache-dir harmonypy \
    && python -m ipykernel install --name=harmonypy \
    && jupyter kernelspec list \
    && conda deactivate \
# CellOracle
    && conda create -n celloracle python=3.8 jupyter notebook ipykernel seaborn Cython jinja2==3.0.3 \
    && source activate celloracle \
    && pip install --no-cache-dir celloracle \
    && python -m ipykernel install --name=celloracle \
    && jupyter kernelspec list \
    && conda deactivate \
# scmomat
    && conda create -y -n scmomat python=3.8 jupyter notebook ipykernel seaborn \
    && source activate scmomat \
    && pip install --no-cache-dir scmomat \
    && jupyter kernelspec list \
    && conda deactivate \
# MARIO
    && conda create -y -n mario python=3.8 jupyter notebook ipykernel seaborn \
    && source activate mario \
    && pip install --no-cache-dir pyMARIO \
    && jupyter kernelspec list \
    && conda deactivate
# Dictys
#RUN conda create -y -n dictys -c conda-forge python=3.9 mamba jupyter notebook ipykernel seaborn \
#    && source activate dictys \
#    && conda install --channel conda-forge --channel bioconda pybedtools \
#    && mamba install -y -c lingfeiwang -c bioconda -c conda-forge -c pytorch dictys cudatoolkit=11.8 \
#    && jupyter kernelspec list \
#    && conda deactivate

### Final setting
RUN conda clean --all -y
COPY bedops_linux_x86_64-v2.4.39 bedops_linux_x86_64-v2.4.39
COPY run_env.sh /opt/scripts/run_env.sh
RUN chmod +x /opt/scripts/run_env.sh

ENV PATH $PATH:/opt:/opt/scripts:/opt/bedops_linux_x86_64-v2.4.39

RUN rm ~/.Renviron

### Fix issue: https://github.com/rnakato/ShortCake/issues/8
RUN rm -rf /root/.cpanm/work/*

CMD ["jupyternotebook.sh"]