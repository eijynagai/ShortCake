FROM docker_python_celloracle
LABEL maintainer "Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>"

USER root
WORKDIR /opt
SHELL ["/bin/bash", "-c"]

ARG GITHUB_PAT
RUN set -x && \
    echo "GITHUB_PAT=$GITHUB_PAT" > ~/.Renviron \
    && cat ~/.Renviron

### Virtual environment
# liana
RUN set -e \
    && conda create -n liana python=3.8 jupyter notebook ipykernel numpy TBB numba \
    && source activate liana \
    && pip install --no-cache-dir liana session-info \
    && python -m ipykernel install --name=liana \
    && jupyter kernelspec list \
    && conda deactivate \
# constclust
    && conda create -n constclust python=3.7 jupyter notebook ipykernel seaborn \
    && source activate constclust \
    && pip install --no-cache-dir --upgrade jupyter_client \
    && pip install --no-cache-dir constclust session-info \
    && python -m ipykernel install --name=constclust \
    && jupyter kernelspec list \
    && conda deactivate
# cellphoneDB
RUN source ~/.bashrc \
    && conda create -n cellphonedb python=3.7 jupyter notebook ipykernel seaborn nbconvert==5.6.1 \
    && source activate cellphonedb \
    && pip install --no-cache-dir --upgrade jupyter_client \
    && pip install --no-cache-dir cellphonedb session-info jinja2==3.0.3 \
    && cellphonedb database download \
    && python -m ipykernel install --name=cellphonedb \
    && jupyter kernelspec list \
    && conda deactivate \
# monet
    && conda create -n monet python=3.8 jupyter notebook ipykernel scikit-learn pandas cython plotly seaborn statsmodels numba pytables networkx click \
    && source activate monet \
    && pip install --no-cache-dir leidenalg scanpy monet session-info \
    && python -m ipykernel install --name=monet \
    && jupyter kernelspec list \
    && conda deactivate \
# scReadSim
    && conda create -n screadsim python=3.8 jupyter notebook ipykernel \
    && source activate screadsim \
    && pip install --no-cache-dir scReadSim session-info \
    && python -m ipykernel install --name=screadsim \
    && jupyter kernelspec list \
    && conda deactivate
# ikarus openblas
RUN conda create -y -n ikarus python=3.8 jupyter notebook ipykernel numpy TBB numba \
    && source activate ikarus \
    && pip install --no-cache-dir ikarus session-info \
    # To avoid the error "ModuleNotFoundError: No module named 'pyscenic.genesig'"
    # issue: https://github.com/BIMSBbioinfo/ikarus/issues/12
    && sed -i 's/pyscenic\.genesig/ctxcore.genesig/g' /opt/conda/envs/ikarus/lib/python3.8/site-packages/ikarus/classifier.py \
    && python -m ipykernel install --name=ikarus \
    && jupyter kernelspec list \
    && conda deactivate \
# pySCENIC
    && conda create -y -n pyscenic python=3.7 jupyter notebook ipykernel numpy \
    && source activate pyscenic \
    && pip install --no-cache-dir --upgrade jupyter_client \
    && conda install -y -c anaconda cytoolz \
    && pip install --no-cache-dir pyscenic session-info \
    && python -m ipykernel install --name=pyscenic \
    && jupyter kernelspec list \
    && conda deactivate
# cell2cell
RUN conda create -y -n cell2cell python=3.8 jupyter notebook ipykernel numpy \
    && source activate cell2cell \
    && pip install --no-cache-dir cell2cell session-info obonet umap-learn \
    && python -m ipykernel install --name=cell2cell \
    && jupyter kernelspec list \
    && conda deactivate

# CellRank
RUN conda create -n cellrank python=3.9 numpy=1.21 jupyter notebook ipykernel numpy  \
    && source activate cellrank \
#    && conda install -y -c conda-forge -c bioconda cellrank-krylov \
    && conda install -y -c conda-forge cellrank \
    && pip install --no-cache-dir igraph session-info \
    && pip install --no-cache-dir git+https://github.com/broadinstitute/wot \
    && python -m ipykernel install --name=cellrank \
    && jupyter kernelspec list \
    && conda deactivate \
# doubletdetection
    && conda create -y -n doubletdetection python=3.7 jupyter notebook ipykernel numpy \
    && source activate doubletdetection \
    && pip install --no-cache-dir --upgrade jupyter_client \
    && pip install --no-cache-dir doubletdetection session-info \
    && python -m ipykernel install --name=doubletdetection \
    && jupyter kernelspec list \
    && conda deactivate \
# episcanpy
    && conda create -y -n episcanpy python=3.7 jupyter notebook ipykernel numpy \
    && source activate episcanpy \
    && pip install --no-cache-dir --upgrade jupyter_client \
    && pip install --no-cache-dir episcanpy \
    && python -m ipykernel install --name=episcanpy \
    && jupyter kernelspec list \
    && conda deactivate \
# dynamo
    && conda create -y -n dynamo python=3.8 jupyter notebook ipykernel seaborn pandas==1.1.1 numpy \
    && source activate dynamo \
    && pip install --no-cache-dir --upgrade jupyter_client \
    && pip install --no-cache-dir dynamo-release pycairo session-info \
    && python -m ipykernel install --name=dynamo \
    && jupyter kernelspec list \
    && conda deactivate
# novosparc openblas
RUN conda create -y -n novosparc python=3.8 jupyter notebook ipykernel numpy TBB numba \
    && source activate novosparc \
    && pip install --no-cache-dir novosparc \
    && python -m ipykernel install --name=novosparc \
    && jupyter kernelspec list \
    && conda deactivate \
# harmonypy
    && conda create -y -n harmonypy python=3.8 jupyter notebook ipykernel numpy TBB openblas \
    && source activate harmonypy \
    && pip install --no-cache-dir harmonypy \
    && python -m ipykernel install --name=harmonypy \
    && jupyter kernelspec list \
    && conda deactivate
# MARIO openblas
RUN conda create -y -n mario python=3.8 jupyter notebook ipykernel seaborn numpy \
    && source activate mario \
    && pip install --no-cache-dir pyMARIO \
    && python -m ipykernel install --name=mario \
    && jupyter kernelspec list \
    && conda deactivate \
# SEACells
    && conda create -y -n seacells -c conda-forge python=3.8 jupyter notebook ipykernel cmake numpy \
    && source activate seacells \
    && pip install --no-cache-dir SEACells \
    && python -m ipykernel install --name=seacells \
    && jupyter kernelspec list \
    && conda deactivate \
# Moscot
    && conda create -y -n moscot -c conda-forge python=3.8 jupyter notebook ipykernel seaborn numpy \
    && source activate moscot \
    && pip install --no-cache-dir moscot rich \
    && python -m ipykernel install --name=moscot \
    && jupyter kernelspec list \
    && conda deactivate

# rapids-singlecell
COPY rapids_singlecell_v0.9.1.tar.gz rapids_singlecell_v0.9.1.tar.gz
RUN tar zxvf rapids_singlecell_v0.9.1.tar.gz \
    && cd rapids_singlecell-0.9.1 \
    && conda env create -f conda/rsc_rapids_23.04.yml \
    && source activate rapids_singlecell \
    && python -m ipykernel install --name=rapids_singlecell \
    && jupyter kernelspec list \
    && conda deactivate \
    && rm -rf /opt/rapids_singlecell-0.9.1 /opt/rapids_singlecell_v0.9.1.tar.gz

# cell2fate: https://github.com/BayraktarLab/cell2fate
RUN conda create -y -n cell2fate python=3.9 jupyter notebook ipykernel importlib-metadata>=4.8.3 \
    && source activate cell2fate \
    && pip install --no-cache-dir git+https://github.com/BayraktarLab/cell2fate session-info \
    && python -m ipykernel install --name=cell2fate \
    && jupyter kernelspec list \
    && conda deactivate

# scVI, scGen, unitvelo (scGen uses scVI internally) (UNItVelo uses scVI internally)
# UniTVelo: https://github.com/StatBiomed/UniTVelo
RUN set -e \
    && conda create -n scvi-scgen-unitvelo-scmomat python=3.9 jupyter notebook ipykernel numba \
    && source activate scvi-scgen-unitvelo-scmomat \
    && conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia \
    && pip install --no-cache-dir scvi-tools unitvelo scmomat session-info \
    && pip install --no-cache-dir git+https://github.com/theislab/scgen.git \
    && python -m ipykernel install --name=scvi-scgen-unitvelo-scmomat \
    && jupyter kernelspec list \
    && conda deactivate

# RENGE
#RUN set -e \
#    && conda init bash \
#    && source ~/.bashrc \
#    && conda create -n renge python=3.9 jupyter notebook ipykernel \
#    && source activate renge \
#    && pip install --no-cache-dir numpy==1.19.5 pandas==1.1.5 scipy==1.4.1 scikit-learn==0.21.3 statsmodels==0.10.1 jax==0.2.0 jaxlib optuna==2.3.0 tqdm==4.60.0 \
#    && pip install --no-cache-dir renge \
#    && python -m ipykernel install --name=renge \
#    && jupyter kernelspec list \
#    && conda deactivate

# SCCAF (outdated scanpy)
#RUN conda create -n SCCAF python=3.7 jupyter notebook ipykernel \
#    && source activate SCCAF \
#    && pip install --no-cache-dir --upgrade jupyter_client session-info \
#    && pip install --no-cache-dir sccaf \
#    && python -m ipykernel install --name=SCCAF \
#    && jupyter kernelspec list \
#    && conda deactivate

# shortcake_default (追加)
#RUN source activate shortcake_default \
#    && pip install --no-cache-dir \
#    && conda deactivate

### Final setting
RUN conda clean --all -y && pip cache purge
COPY bedops_linux_x86_64-v2.4.39 bedops_linux_x86_64-v2.4.39

ENV PATH $PATH:/opt:/opt/scripts:/opt/conda/envs/shortcake_default/bin/:/opt/bedops_linux_x86_64-v2.4.39
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda/compat/

RUN rm ~/.Renviron
RUN rm -rf /opt/OpenBLAS-0.3.24 /opt/OpenBLAS-0.3.24.tar.gz /opt/OpenBLAS /opt/bustools /opt/samtools-1.17

CMD ["jupyternotebook.sh"]
